// COMSC-210 | Lab 3A | Mamadou Sissoko
// IDE used: Visual Studio Code

#include <iostream>
#include <string>
#include <iomanip>
using namespace std;

// Constants
const int NUM_RESTAURANTS = 4;
const int MIN_RATING = 1;
const int MAX_RATING = 5;
const int NAME_WIDTH = 25;
const int ADDR_WIDTH = 25;
const int CUISINE_WIDTH = 15;

// Struct
struct Restaurant {
    string name;          // restaurant name
    string address;       // restaurant address
    string cuisine;       // type of cuisine
    int rating;           // rating 1-5
    bool reservations;    // true if accepts reservations
};

// Function Prototypes
// getRestaurants() collects data for all restaurants
void getRestaurants(Restaurant restaurants[], int size);

// displayRestaurants() prints all restaurant info in table
void displayRestaurants(const Restaurant restaurants[], int size);

// validateRating() ensures user enters rating 1-5
int validateRating();

// validateYesNo() ensures user enters 'y' or 'n'
bool validateYesNo();

// Main Function
int main() {
    Restaurant restaurants[NUM_RESTAURANTS];

    getRestaurants(restaurants, NUM_RESTAURANTS);
    displayRestaurants(restaurants, NUM_RESTAURANTS);

    return 0;
}

// Function Definitions
void getRestaurants(Restaurant restaurants[], int size) {
    for (int i = 0; i < size; i++) {
        cout << "\n--- Enter info for Restaurant #" << (i + 1) << " ---\n";

        cout << "Name: ";
        getline(cin, restaurants[i].name);

        cout << "Address: ";
        getline(cin, restaurants[i].address);

        cout << "Cuisine: ";
        getline(cin, restaurants[i].cuisine);

        cout << "Rating (1-5): ";
        restaurants[i].rating = validateRating();

        cout << "Accepts reservations? (y/n): ";
        restaurants[i].reservations = validateYesNo();
    }
}

void displayRestaurants(const Restaurant restaurants[], int size) {
    cout << endl
         << left << setw(NAME_WIDTH) << "Name"
         << setw(ADDR_WIDTH) << "Address"
         << setw(CUISINE_WIDTH) << "Cuisine"
         << setw(8) << "Rating"
         << "Reservations" << endl;

    cout << string(NAME_WIDTH + ADDR_WIDTH + CUISINE_WIDTH + 20, '-') << endl;

    for (int i = 0; i < size; i++) {
        cout << left << setw(NAME_WIDTH) << restaurants[i].name
             << setw(ADDR_WIDTH) << restaurants[i].address
             << setw(CUISINE_WIDTH) << restaurants[i].cuisine
             << setw(8) << restaurants[i].rating
             << (restaurants[i].reservations ? "Yes" : "No") << endl;
    }
}

int validateRating() {
    int rating;
    while (true) {
        cin >> rating;

        if (cin.fail()) {
            cin.clear();
            cin.ignore(1000, '\n');
            cout << "Invalid entry. Enter a number between "
                 << MIN_RATING << " and " << MAX_RATING << ": ";
        } 
        else if (rating < MIN_RATING || rating > MAX_RATING) {
            cout << "Rating must be between " << MIN_RATING 
                 << " and " << MAX_RATING << ". Try again: ";
        } 
        else {
            cin.ignore(1000, '\n'); 
            return rating;
        }
    }
}

bool validateYesNo() {
    char input;
    while (true) {
        cin >> input;
        cin.ignore(1000, '\n');

        if (input == 'y' || input == 'Y') {
            return true;
        }
        else if (input == 'n' || input == 'N') {
            return false;
        }
        else {
            cout << "Invalid entry. Enter 'y' or 'n': ";
        }
    }
}
